(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{468:function(a,t,r){"use strict";r.r(t);var s=r(56),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"属性关键字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性关键字"}},[a._v("#")]),a._v(" 属性关键字")]),a._v(" "),r("h2",{attrs:{id:"assign"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#assign"}},[a._v("#")]),a._v(" assign")]),a._v(" "),r("ul",[r("li",[a._v("修饰基本数据类型，int，BOOL")]),a._v(" "),r("li",[a._v("修饰对象类型,不改变其引用计数")]),a._v(" "),r("li",[a._v("所指对象对象销毁后，会产生野指针,如果后续在分配对象到堆上的某块内存时，正好分到这块地址，程序就会crash")])]),a._v(" "),r("h2",{attrs:{id:"weak"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#weak"}},[a._v("#")]),a._v(" weak")]),a._v(" "),r("ul",[r("li",[a._v("修饰对象类型,不改变其引用计数")]),a._v(" "),r("li",[a._v("所指对象对象销毁后，会自动置位nil")])]),a._v(" "),r("h2",{attrs:{id:"retain"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#retain"}},[a._v("#")]),a._v(" retain")]),a._v(" "),r("p",[a._v("ARC下的strong等同于MRC下的retain都会把对象引用计数加1")]),a._v(" "),r("h2",{attrs:{id:"strong"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#strong"}},[a._v("#")]),a._v(" strong")]),a._v(" "),r("p",[a._v("ARC下的strong等同于MRC下的retain都会把对象引用计数加1")]),a._v(" "),r("h2",{attrs:{id:"copy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[a._v("#")]),a._v(" copy")]),a._v(" "),r("ul",[r("li",[a._v("对象会调用copy方法")]),a._v(" "),r("li",[a._v("注意NSMutableArray等可变容器使用copy修饰符，如[NSMutableArray copy]会使其变成不可变对象。继续调用可变对象的方法会报错，如 NSMutableArray addObject")])]),a._v(" "),r("h2",{attrs:{id:"block属性为什么需要用copy来修饰"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#block属性为什么需要用copy来修饰"}},[a._v("#")]),a._v(" block属性为什么需要用copy来修饰？")]),a._v(" "),r("p",[a._v("因为在MRC下，block在创建的时候，它的内存是分配在栈(stack)上的，而不是在堆(heap)上，可能被随时回收。他本身的作于域是属于创建时候的作用域，一旦在创建时候的作用域外面调用block将导致程序崩溃。通过copy可以把block拷贝（copy）到堆，保证block的声明域外使用。在ARC下编译器会自动对block进行copy操作。")]),a._v(" "),r("h2",{attrs:{id:"block与-weak的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#block与-weak的区别"}},[a._v("#")]),a._v(" __block与__weak的区别")]),a._v(" "),r("p",[a._v("__block：在ARC和MRC下都可用，可修饰对象，也可以修饰基本数据类型。")]),a._v(" "),r("p",[a._v("__block对象可以在block被重新赋值，__weak不可以。")]),a._v(" "),r("p",[a._v("__weak：只在ARC中使用，只能修饰对象，不能修饰基本数据类型（int、bool）。\n同时，在ARC下，要避免block出现循环引用，经常会：__weak typedof(self) weakSelf = self;")])])}),[],!1,null,null,null);t.default=_.exports}}]);