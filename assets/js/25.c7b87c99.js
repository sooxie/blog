(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{422:function(a,t,e){"use strict";e.r(t);var s=e(56),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"ffmpeg命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ffmpeg命令"}},[a._v("#")]),a._v(" ffmpeg命令")]),a._v(" "),e("h2",{attrs:{id:"命令基本格式及参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令基本格式及参数"}},[a._v("#")]),a._v(" 命令基本格式及参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg arg1 arg2 -i arg3 arg4 arg5\n")])])]),e("ul",[e("li",[a._v("arg1：全局参数")]),a._v(" "),e("li",[a._v("arg2：输入文件参数")]),a._v(" "),e("li",[a._v("arg3：输入文件")]),a._v(" "),e("li",[a._v("arg4：输出文件参数")]),a._v(" "),e("li",[a._v("arg5：输出文件")])]),a._v(" "),e("p",[a._v("ffmpeg 通过 -i 选项读取输任意数量的输入“文件”（可以是常规文件，管道，网络流，抓取设备等，并写入任意数量的输出“文件”。\n原则上，每个输入/输出“文件”都可以包含任意数量的不同类型的视频流（视频/音频/字幕/附件/数据）。 流的数量和/或类型是由容器格式来限制。 选择从哪个输入进入到哪个输出将自动完成或使用 -map 选项。\n要引用选项中的输入文件，您必须使用它们的索引（从0开始）。 例如。 第一个输入文件是0，第二个输入文件是1，等等。类似地，文件内的流被它们的索引引用。 例如。 2：3是指第三个输入文件中的第四个流。")]),a._v(" "),e("h2",{attrs:{id:"主要参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要参数"}},[a._v("#")]),a._v(" 主要参数")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("参数")]),a._v(" "),e("th",[a._v("说明")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("-f fmt（输入/输出）")]),a._v(" "),e("td",[a._v("强制输入或输出文件格式。 格式通常是自动检测输入文件，并从输出文件的文件扩展名中猜测出来，所以在大多数情况下这个选项是不需要的。")])]),a._v(" "),e("tr",[e("td",[a._v("-i url（输入）")]),a._v(" "),e("td",[a._v("输入文件")])]),a._v(" "),e("tr",[e("td",[a._v("-y（全局参数）")]),a._v(" "),e("td",[a._v("覆盖输出文件而不询问。")])]),a._v(" "),e("tr",[e("td",[a._v("-n（全局参数）")]),a._v(" "),e("td",[a._v("不要覆盖输出文件，如果指定的输出文件已经存在，请立即退出。")])]),a._v(" "),e("tr",[e("td",[a._v("-c [：stream_specifier] codec（输入/输出，每个流）")]),a._v(" "),e("td",[a._v("选择一个编码器（当在输出文件之前使用）或解码器（当在输入文件之前使用时）用于一个或多个流。codec 是解码器/编码器的名称或 copy（仅输出）以指示该流不被重新编码。如：ffmpeg -i INPUT -map 0 -c:v libx264 -c:a copy OUTPUT")])]),a._v(" "),e("tr",[e("td",[a._v("-codec [：stream_specifier]编解码器（输入/输出，每个流）")]),a._v(" "),e("td",[a._v("同 -c")])]),a._v(" "),e("tr",[e("td",[a._v("-t duration（输入/输出）")]),a._v(" "),e("td",[a._v("当用作输入选项（在-i之前）时，限制从输入文件读取的数据的持续时间。当用作输出选项时（在输出url之前），在持续时间到达持续时间之后停止输出。")])]),a._v(" "),e("tr",[e("td",[a._v("-ss位置（输入/输出）")]),a._v(" "),e("td",[a._v("当用作输入选项时（在-i之前），在这个输入文件中寻找位置。 请注意，在大多数格式中，不可能精确搜索，因此ffmpeg将在位置之前寻找最近的搜索点。 当转码和-accurate_seek被启用时（默认），搜索点和位置之间的这个额外的分段将被解码和丢弃。 当进行流式复制或使用-noaccurate_seek时，它将被保留。当用作输出选项（在输出url之前）时，解码但丢弃输入，直到时间戳到达位置。")])]),a._v(" "),e("tr",[e("td",[a._v("-frames [：stream_specifier] framecount（output，per-stream）")]),a._v(" "),e("td",[a._v("停止在帧计数帧之后写入流。")])]),a._v(" "),e("tr",[e("td",[a._v("-filter [：stream_specifier] filtergraph（output，per-stream）")]),a._v(" "),e("td",[a._v("创建由filtergraph指定的过滤器图，并使用它来过滤流。filtergraph是应用于流的filtergraph的描述，并且必须具有相同类型的流的单个输入和单个输出。在过滤器图形中，输入与标签中的标签相关联，标签中的输出与标签相关联。有关filtergraph语法的更多信息，请参阅ffmpeg-filters手册。")])])])]),a._v(" "),e("h2",{attrs:{id:"视频参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视频参数"}},[a._v("#")]),a._v(" 视频参数")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("参数")]),a._v(" "),e("th",[a._v("说明")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("-aspect [：stream_specifier] 宽高比（输出，每个流）")]),a._v(" "),e("td",[a._v("设置方面指定的视频显示宽高比。aspect可以是浮点数字符串，也可以是num：den形式的字符串，其中num和den是宽高比的分子和分母。例如“4：3”，“16：9”，“1.3333”和“1.7777”是有效的参数值。如果与-vcodec副本一起使用，则会影响存储在容器级别的宽高比，但不会影响存储在编码帧中的宽高比（如果存在）。")])]),a._v(" "),e("tr",[e("td",[a._v("-vn（输出）")]),a._v(" "),e("td",[a._v("禁用视频录制。")])]),a._v(" "),e("tr",[e("td",[a._v("-vcodec编解码器（输出）")]),a._v(" "),e("td",[a._v("设置视频编解码器。这是-codec：v的别名。")])]),a._v(" "),e("tr",[e("td",[a._v("-vf filtergraph（输出）")]),a._v(" "),e("td",[a._v("创建由filtergraph指定的过滤器图，并使用它来过滤流。")])])])]),a._v(" "),e("h2",{attrs:{id:"音频参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#音频参数"}},[a._v("#")]),a._v(" 音频参数")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("参数")]),a._v(" "),e("th",[a._v("说明")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("-aframes（输出）")]),a._v(" "),e("td",[a._v("设置要输出的音频帧的数量。这是-frames：a的一个过时的别名。")])]),a._v(" "),e("tr",[e("td",[a._v("-ar [：stream_specifier] freq（输入/输出，每个流）")]),a._v(" "),e("td",[a._v("设置音频采样频率。对于输出流，它默认设置为相应输入流的频率。对于输入流，此选项仅适用于音频捕获设备和原始分路器，并映射到相应的分路器选件。")])]),a._v(" "),e("tr",[e("td",[a._v("-ac [：stream_specifier]通道（输入/输出，每个流）")]),a._v(" "),e("td",[a._v("设置音频通道的数量。对于输出流，它默认设置为输入音频通道的数量。对于输入流，此选项仅适用于音频捕获设备和原始分路器，并映射到相应的分路器选件。")])]),a._v(" "),e("tr",[e("td",[a._v("-an（输出）")]),a._v(" "),e("td",[a._v("禁用录音。")])]),a._v(" "),e("tr",[e("td",[a._v("-acodec编解码器（输入/输出）")]),a._v(" "),e("td",[a._v("设置音频编解码器。这是-codec的别名：a。")])]),a._v(" "),e("tr",[e("td",[a._v("-sample_fmt [：stream_specifier] sample_fmt（输出，每个流）")]),a._v(" "),e("td",[a._v("设置音频采样格式。使用-sample_fmts获取支持的样本格式列表。")])]),a._v(" "),e("tr",[e("td",[a._v("-af filtergraph（输出）")]),a._v(" "),e("td",[a._v("创建由filtergraph指定的过滤器图，并使用它来过滤流。")])])])]),a._v(" "),e("h2",{attrs:{id:"_1、基本信息查询命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本信息查询命令"}},[a._v("#")]),a._v(" 1、基本信息查询命令")]),a._v(" "),e("h4",{attrs:{id:"查看设备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看设备"}},[a._v("#")]),a._v(" 查看设备")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -f avfoundation -list_devices true -i ''\n")])])]),e("h4",{attrs:{id:"格式转变换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#格式转变换"}},[a._v("#")]),a._v(" 格式转变换")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i infile.mp4 -vcodec copy -acodec copy outfile.flv\n")])])]),e("p",[a._v("ffmpeg -i out.flv -vcodec copy -acodec copy cai.mp4")]),a._v(" "),e("p",[a._v("ffmpeg -i out.flv -c copy -c:s mov_text output.mp4 -y")]),a._v(" "),e("h2",{attrs:{id:"_2、裁剪和合并命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、裁剪和合并命令"}},[a._v("#")]),a._v(" 2、裁剪和合并命令")]),a._v(" "),e("h4",{attrs:{id:"裁剪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#裁剪"}},[a._v("#")]),a._v(" 裁剪")]),a._v(" "),e("ul",[e("li",[a._v("-ss 开始时间")]),a._v(" "),e("li",[a._v("-t 裁剪长度")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i in.flv -ss 00:00:00 -t 10 out.flv\n")])])]),e("h4",{attrs:{id:"视频合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视频合并"}},[a._v("#")]),a._v(" 视频合并")]),a._v(" "),e("ul",[e("li",[a._v("-f concat 对文件拼接\n首先创建一个 inputs.txt 文件，文件内容如下：")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("file '1.flv'\nfile '2.flv'\nfile '3.flv'\n")])])]),e("p",[a._v("然后执行下面的命令：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -f concat -i inputs.txt -c copy output.flv\n")])])]),e("h4",{attrs:{id:"hls切片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hls切片"}},[a._v("#")]),a._v(" hls切片")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i out.mp4 -c:v libx264 -c:a libfdk_aac -strict -2 -f hls  out.m3u8\n")])])]),e("ul",[e("li",[a._v("-strict -2 指明音频使有AAC。")]),a._v(" "),e("li",[a._v("f hls 转成 m3u8 格式。")])]),a._v(" "),e("h4",{attrs:{id:"视频裁剪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视频裁剪"}},[a._v("#")]),a._v(" 视频裁剪")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i VR.mov  -vf crop=in_w-200:in_h-200 -c:v libx264 -c:a copy -video_size 1280x720 vr_new.mp4\n\n")])])]),e("p",[a._v("crop 格式：crop=out_w:out_h❌y")]),a._v(" "),e("ul",[e("li",[a._v("out_w: 输出的宽度。可以使用 in_w 表式输入视频的宽度。")]),a._v(" "),e("li",[a._v("out_h: 输出的高度。可以使用 in_h 表式输入视频的高度。")]),a._v(" "),e("li",[a._v("x : X坐标")]),a._v(" "),e("li",[a._v("y : Y坐标\n如果 x和y 设置为 0,说明从左上角开始裁剪。如果不写是从中心点裁剪。\n倍速播放")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg -i out.mp4 -filter_complex "[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]" -map "[v]" -map "[a]" speed2.0.mp4\n')])])]),e("ul",[e("li",[a._v("-filter_complex 复杂滤镜，[0:v]表示第一个（文件索引号是0）文件的视频作为输入。setpts=0.5*PTS表示每帧视频的pts时间戳都乘0.5 ，也就是差少一半。[v]表示输出的别名。音频同理就不详述了。")]),a._v(" "),e("li",[a._v('map 可用于处理复杂输出，如可以将指定的多路流输出到一个输出文件，也可以指定输出到多个文件。"[v]" 复杂滤镜输出的别名作为输出文件的一路流。上面 map的用法是将复杂滤镜输出的视频和音频输出到指定文件中。')])]),a._v(" "),e("h4",{attrs:{id:"对称视频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对称视频"}},[a._v("#")]),a._v(" 对称视频")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg  -i out.mp4 -filter_complex "[0:v]pad=w=2*iw[a];[0:v]hflip[b];[a][b]overlay=x=w" duicheng.mp4\n')])])]),e("h4",{attrs:{id:"hflip-水平翻转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hflip-水平翻转"}},[a._v("#")]),a._v(" hflip 水平翻转")]),a._v(" "),e("p",[a._v("如果要修改为垂直翻转可以用vflip。")]),a._v(" "),e("h4",{attrs:{id:"画中画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#画中画"}},[a._v("#")]),a._v(" 画中画")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg -i out.mp4 -i out1.mp4 -filter_complex "[1:v]scale=w=176:h=144:force_original_aspect_ratio=decrease[ckout];[0:v][ckout]overlay=x=W-w-10:y=0[out]" -map "[out]" -movflags faststart new.mp4\n')])])]),e("h4",{attrs:{id:"录制画中画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录制画中画"}},[a._v("#")]),a._v(" 录制画中画")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg  -f avfoundation -i "1" -framerate 30 -f avfoundation -i "0:0" \n-r 30 -c:v libx264 -preset ultrafast \n-c:a libfdk_aac -profile:a aac_he_v2 -ar 44100 -ac 2 \n-filter_complex "[1:v]scale=w=176:h=144:force_original_aspect_ratio=decrease[a];[0:v][a]overlay=x=W-w-10:y=0[out]" \n-map "[out]" -movflags faststart -map 1:a b.mp4\n')])])]),e("h4",{attrs:{id:"多路视频拼接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多路视频拼接"}},[a._v("#")]),a._v(" 多路视频拼接")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg  -f avfoundation -i "1" -framerate 30 -f avfoundation   -i "0:0" -r 30 -c:v libx264 -preset ultrafast -c:a libfdk_aac -profile:a aac_he_v2 -ar 44100 -ac 2 -filter_complex "[0:v]scale=320:240[a];[a]pad=640:240[b];[b][1:v]overlay=320:0[out]" -map "[out]" -movflags faststart  -map 1:a  c.mp4\n')])])]),e("h2",{attrs:{id:"_3、录制命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、录制命令"}},[a._v("#")]),a._v(" 3、录制命令")]),a._v(" "),e("h4",{attrs:{id:"mac-ios设备查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac-ios设备查询"}},[a._v("#")]),a._v(" Mac&iOS设备查询")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg -f avfoundation -list_devices true -i ""\n')])])]),e("h4",{attrs:{id:"录屏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录屏"}},[a._v("#")]),a._v(" 录屏")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -f avfoundation -i 1 -r 30 out.yuv\n")])])]),e("ul",[e("li",[a._v("-f 指定使用 avfoundation 采集数据。")]),a._v(" "),e("li",[a._v("-i 指定从哪儿采集数据，它是一个文件索引号。在我的MAC上，1代表桌面（可以通过上面的命令查询设备索引号）。")]),a._v(" "),e("li",[a._v("-r 指定帧率。按ffmpeg官方文档说-r与-framerate作用相同，但实际测试时发现不同。- - -framerate 用于限制输入，而-r用于限制输出。")])]),a._v(" "),e("h4",{attrs:{id:"录屏-声音"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录屏-声音"}},[a._v("#")]),a._v(" 录屏+声音")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg  -f avfoundation -i 1:0  -r 29.97 -c:v libx264 -crf 0 -c:a libfdk_aac -profile:a aac_he_v2 -b:a 32k  out.flv\n")])])]),e("ul",[e("li",[a._v('-i 1:0 冒号前面的 "1" 代表的屏幕索引号。冒号后面的"0"代表的声音索相号。')]),a._v(" "),e("li",[a._v("-c:v 与参数 -vcodec 一样，表示视频编码器。c 是 codec 的缩写，v 是video的缩写。")]),a._v(" "),e("li",[a._v("-crf 是 x264 的参数。 0 表式无损压缩。")]),a._v(" "),e("li",[a._v("-c:a 与参数 -acodec 一样，表示音频编码器。")]),a._v(" "),e("li",[a._v("-profile 是 fdk_aac 的参数。 aac_he_v2 表式使用 AAC_HE v2 压缩数据。")]),a._v(" "),e("li",[a._v("-b:a 指定音频码率。 b 是 bitrate的缩写, a是 audio的缩与。")])]),a._v(" "),e("h4",{attrs:{id:"录视频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录视频"}},[a._v("#")]),a._v(" 录视频")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -framerate 30 -f avfoundation -i 0 out.mp4 \n")])])]),e("ul",[e("li",[a._v("-framerate 限制视频的采集帧率。这个必须要根据提示要求进行设置，如果不设置就会报错。")]),a._v(" "),e("li",[a._v("-f 指定使用 avfoundation 采集数据。")]),a._v(" "),e("li",[a._v("-i 指定视频设备的索引号。")])]),a._v(" "),e("h4",{attrs:{id:"视频-音频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视频-音频"}},[a._v("#")]),a._v(" 视频+音频")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -framerate 30 -f avfoundation -i 0:0 out.mp4 \n")])])]),e("h4",{attrs:{id:"录音"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录音"}},[a._v("#")]),a._v(" 录音")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -f avfoundation -i :0 out.wav\n")])])]),e("h4",{attrs:{id:"录制音频裸数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录制音频裸数据"}},[a._v("#")]),a._v(" 录制音频裸数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg  -f avfoundation -i :0 -ar 44100 -f s16le out.pcm\n")])])]),e("h2",{attrs:{id:"_4、图片-视频互转命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、图片-视频互转命令"}},[a._v("#")]),a._v(" 4、图片/视频互转命令")]),a._v(" "),e("h4",{attrs:{id:"jpg转yuv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jpg转yuv"}},[a._v("#")]),a._v(" jpg转yuv")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i a.yuv -pixel_format yuv420p b.yuv\n\n")])])]),e("h4",{attrs:{id:"jpg转yuv-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jpg转yuv-2"}},[a._v("#")]),a._v(" jpg转yuv")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg  -s 1920x1080 -pix_fmt nv21 -i a.yuv image.jpg\n")])])]),e("h4",{attrs:{id:"视频转jpeg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视频转jpeg"}},[a._v("#")]),a._v(" 视频转JPEG")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i test.flv -r 1 -f image2 image-%3d.jpeg\n")])])]),e("h4",{attrs:{id:"视频转gif"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视频转gif"}},[a._v("#")]),a._v(" 视频转gif")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i out.mp4 -ss 00:00:00 -t 10 out.gif\n")])])]),e("h4",{attrs:{id:"图片转视频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图片转视频"}},[a._v("#")]),a._v(" 图片转视频")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg  -f image2 -i image-%3d.jpeg images.mp4\n")])])]),e("h2",{attrs:{id:"_5、分解-复用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、分解-复用命令"}},[a._v("#")]),a._v(" 5、分解/复用命令")]),a._v(" "),e("p",[a._v("流拷贝是通过将 copy 参数提供给-codec选项来选择流的模式。它使得ffmpeg省略了指定流的解码和编码步骤，所以它只能进行多路分解和多路复用。 这对于更改容器格式或修改容器级元数据很有用。 由于没有解码或编码，速度非常快，没有质量损失。 但是，由于许多因素，在某些情况下可能无法正常工作。 应用过滤器显然也是不可能的，因为过滤器处理未压缩的数据")]),a._v(" "),e("h4",{attrs:{id:"抽取音频流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抽取音频流"}},[a._v("#")]),a._v(" 抽取音频流")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i input.mp4 -acodec copy -vn out.aac\n")])])]),e("ul",[e("li",[a._v("-acodec: 指定音频编码器，copy 指明只拷贝，不做编解码。")]),a._v(" "),e("li",[a._v("-vn: v 代表视频，n 代表 no 也就是无视频的意思。")])]),a._v(" "),e("h4",{attrs:{id:"抽取视频流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抽取视频流"}},[a._v("#")]),a._v(" 抽取视频流")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i input.mp4 -vcodec copy -an out.h264\n")])])]),e("ul",[e("li",[a._v("-vcodec: 指定视频编码器，copy 指明只拷贝，不做编解码。")]),a._v(" "),e("li",[a._v("-an: a 代表音频，n 代表 no 也就是无音频的意思。")])]),a._v(" "),e("h4",{attrs:{id:"转格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转格式"}},[a._v("#")]),a._v(" 转格式")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i out.mp4 -vcodec copy -acodec copy out.flv\n")])])]),e("p",[a._v("上面的命令表式的是音频、视频都直接 copy，只是将 mp4 的封装格式转成了flv。")]),a._v(" "),e("h4",{attrs:{id:"音视频合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#音视频合并"}},[a._v("#")]),a._v(" 音视频合并")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i out.h264 -i out.aac -vcodec copy -acodec copy out.mp4\n")])])]),e("h2",{attrs:{id:"_6、直播命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、直播命令"}},[a._v("#")]),a._v(" 6、直播命令")]),a._v(" "),e("h4",{attrs:{id:"mac-nginx启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac-nginx启动"}},[a._v("#")]),a._v(" mac nginx启动")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("nginx -s reload\n")])])]),e("h4",{attrs:{id:"推流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推流"}},[a._v("#")]),a._v(" 推流")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -re -i out.mp4 -c copy -f flv rtmp://server/live/streamName\n")])])]),e("h4",{attrs:{id:"拉流保存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉流保存"}},[a._v("#")]),a._v(" 拉流保存")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i rtmp://server/live/streamName -c copy dump.flv\n")])])]),e("h4",{attrs:{id:"转流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转流"}},[a._v("#")]),a._v(" 转流")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v copy -f flv rtmp://server/live/h264Stream\n")])])]),e("h4",{attrs:{id:"实时推流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实时推流"}},[a._v("#")]),a._v(" 实时推流")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg -framerate 15 -f avfoundation -i "1" -s 1280x720 -c:v libx264 -f flv rtmp://localhost:1935/live/room\n\nffmpeg -framerate 15 -f avfoundation -i "1" -s 640x480 -c:v libx264 -f flv rtmp://192.168.1.2:1935/live/room\n\n\n\n')])])]),e("p",[a._v('ffmpeg -framerate 15 -f avfoundation -i "1" -s 1280x720 -c:v libx264 -f flv rtmp://10.50.128.18:1935/live/room')]),a._v(" "),e("p",[a._v("ffmpeg -re -i a.flv -c copy -f flv rtmp://10.50.128.18:1935/live/room")]),a._v(" "),e("h2",{attrs:{id:"_7、处理原始数据命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、处理原始数据命令"}},[a._v("#")]),a._v(" 7、处理原始数据命令")]),a._v(" "),e("p",[a._v("ffmpeg -i  -an -c:v rawvideo -pixel_format yuv420p out.yuv")]),a._v(" "),e("h4",{attrs:{id:"提取原始yuv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提取原始yuv"}},[a._v("#")]),a._v(" 提取原始YUV")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("ffmpeg -i input.mp4 -an -c:v rawvideo -pixel_format yuv420p out.yuv\n\nffmpeg -c:v h264 -i in.h264 out.yuv\n\nffplay -s wxh out.yuv\n")])])]),e("p",[a._v("-c:v rawvideo 指定将视频转成原始数据\n-pixel_format yuv420p 指定转换格式为yuv420p")]),a._v(" "),e("h4",{attrs:{id:"yuv转h264"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yuv转h264"}},[a._v("#")]),a._v(" YUV转H264")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -f rawvideo -pix_fmt yuv420p -s 320x240 -r 30 -i out.yuv -c:v libx264 -f rawvideo out.h264\n\n\n\nffmpeg -s 640x480 -pix_fmt yuv420p -i in.yuv -c:v libx264 out.h264\n\n")])])]),e("h4",{attrs:{id:"提取原始pcm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提取原始pcm"}},[a._v("#")]),a._v(" 提取原始PCM")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("ffmpeg -i out.mp4 -vn -ar "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("44100")]),a._v(" -ac "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" -f s16le out.pcm\n\nffplay -ar "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("44100")]),a._v(" -ac "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" -f s16le -i out.pcm\n")])])]),e("h4",{attrs:{id:"pcm转wav"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pcm转wav"}},[a._v("#")]),a._v(" PCM转WAV")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -f s16be -ar 8000 -ac 2 -acodec pcm_s16be -i input.raw output.wav\n")])])]),e("h2",{attrs:{id:"_8、滤镜命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、滤镜命令"}},[a._v("#")]),a._v(" 8、滤镜命令")]),a._v(" "),e("h4",{attrs:{id:"简单滤镜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单滤镜"}},[a._v("#")]),a._v(" 简单滤镜")]),a._v(" "),e("p",[a._v("简单的过滤器图是那些只有一个输入和输出，都是相同的类型。 在上面的图中，它们可以通过在解码和编码之间插入一个额外的步骤来表示：\n简单的filtergraphs配置了per-stream-filter选项（分别为视频和音频使用-vf和-af别名）。 一个简单的视频filtergraph可以看起来像这样的例子：\n请注意，某些滤镜会更改帧属性，但不会改变帧内容。 例如。 上例中的fps过滤器会改变帧数，但不会触及帧内容。 另一个例子是setpts过滤器，它只设置时间戳，否则不改变帧。")]),a._v(" "),e("h4",{attrs:{id:"复杂滤镜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂滤镜"}},[a._v("#")]),a._v(" 复杂滤镜")]),a._v(" "),e("p",[a._v("复杂的过滤器图是那些不能简单描述为应用于一个流的线性处理链的过滤器图。 例如，当图形有多个输入和/或输出，或者当输出流类型与输入不同时，就是这种情况。 他们可以用下图来表示：")]),a._v(" "),e("p",[a._v("复杂的过滤器图使用-filter_complex选项进行配置。 请注意，此选项是全局性的，因为复杂的过滤器图形本质上不能与单个流或文件明确关联。\n-lavfi选项等同于-filter_complex。\n一个复杂的过滤器图的一个简单的例子是覆盖过滤器，它有两个视频输入和一个视频输出，包含一个视频叠加在另一个上面。 它的音频对应是amix滤波器。")]),a._v(" "),e("h4",{attrs:{id:"添加水印"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加水印"}},[a._v("#")]),a._v(" 添加水印")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('ffmpeg -i out.mp4  -vf "movie=logo.png,scale=64:48[watermask];[in][watermask] overlay=30:10 [out]" water.mp4\n')])])]),e("ul",[e("li",[a._v("-vf中的 movie 指定logo位置。scale 指定 logo 大小。overlay 指定 logo 摆放的位置")])]),a._v(" "),e("h4",{attrs:{id:"删除水印"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除水印"}},[a._v("#")]),a._v(" 删除水印")]),a._v(" "),e("p",[a._v("删除水印先通过 ffplay 找到要删除 LOGO 的位置")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffplay -i test.flv -vf delogo=x=806:y=20:w=70:h=80:show=1\n")])])]),e("p",[a._v("使用 delogo 滤镜删除 LOGO")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i test.flv -vf delogo=x=806:y=20:w=70:h=80 output.flv\n")])])]),e("p",[a._v("视频缩小一倍")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ffmpeg -i out.mp4 -vf scale=iw/2:-1 scale.mp4\n")])])]),e("ul",[e("li",[a._v("-vf scale 指定使用简单过滤器 scale，iw/2:-1 中的 iw 指定按整型取视频的宽度。 -1 表示高度随宽度一起变化。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);